from __future__ import annotations

from typing import Any, Mapping, Protocol, Tuple

# Public alias used by imports and type hints
StepResult = Tuple[Mapping[str, Any], float, bool, dict]


class AECEnv(Protocol):
    """PettingZoo AEC-like multi-agent interface."""

    def capabilities(self) -> dict[str, bool]: ...
    def reset(self, seed: int | None = None) -> Mapping[str, Any]: ...
    def step(self, action: Mapping[str, Any]) -> StepResult: ...
    def close(self) -> None: ...


class GymEnvFacade(Protocol):
    """Single-agent Gymnasium facade over AEC core."""

    def capabilities(self) -> dict[str, bool]: ...
    def reset(self, seed: int | None = None) -> Mapping[str, Any]: ...
    def step(self, action: Mapping[str, Any]) -> StepResult: ...
    def close(self) -> None: ...
